# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

resources:
  repositories:
  - repository: TerraformCode
    type: github
    name: Maxyboy50/website
    endpoint: Maxyboy50
pool:
  vmImage: ubuntu-latest

stages:
  - stage: 'TerraformPlan'
    jobs:
      - job: 'Plan'
        
        steps:
          - bash: |
              terraform init
            workingDirectory: 'iac'
            env:
              AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY)
              AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_KEY)
          - bash: |
              terraform plan -out=plan.json
            workingDirectory: 'iac'
            env:
              AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY)
              AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_KEY)
          - task: publishPipelineArtifact@0
            inputs:
              artifactName: plan
              targetPath: 'iac/plan.json'
      - job: 'WebsiteContent'
        steps:
        - task: PublishPipelineArtifact@0
  - stage: TerraformApply
    jobs:
      - deployment: Apply
        environment: Test
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: plan
                - checkout: self
                  
                - bash: |
                    terraform init 
                  workingDirectory: '$(System.DefaultWorkingDirectory)/iac'
                  env:
                    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY)
                    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_KEY)

                - bash: |
                    terraform apply $(Pipeline.Workspace)/plan/plan.json
                  workingDirectory: '$(System.DefaultWorkingDirectory)/iac'
                  env:
                    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY)
                    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_KEY)
  - stage: Upload S3 Content
    jobs:
      - job: S3
        steps:
          - task: S3Upload@1
            inputs:
              awsCredentials: 'AWS Tasks'
              regionName: 'us-east-1'
              bucketName: 'website-bucket-max-weitz'
              globExpressions: '**'
            displayName: Upload Files to S3
